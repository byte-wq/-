// lab3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.

#include <iostream>   
#include <iomanip>    
#include <cstdint>    

int main() {
    setlocale(LC_ALL, "Russian");
    int mynum= 69; //создание переменной 
    int* pMynum = &mynum; // объявляем указатель и присваиваем ему адрес  
    std::cout << "Адрес, хранящийся в pMynum (указатель) = " << pMynum << std::endl;
    std::cout << "Значение по этому адресу (*pMynum) = " << *pMynum<< std::endl;
    std::cout << "Адрес (в целочисленном виде) = 0x"
        << std::hex << reinterpret_cast<uintptr_t>(pMynum) << std::dec << std::endl;
    *pMynum = 100; // новое значение 
    std::cout << "После изменения через указатель:" << std::endl;
    std::cout << "  *pMynum= " << *pMynum << std::endl; 
    std::cout << "  mynum   = " << mynum << std::endl;   
    int arr[5] = { 10, 20, 30, 40, 50 }; // создание массива 
    int* pArr = arr;
    std::cout << "Элементы массива arr через указатель pArr:" << std::endl;
    for (int i = 0; i < 5; ++i) {
        std::cout << "  arr[" << i << "] = " << *(pArr + i) << std::endl;
    }

    int num2 = 5; // объявление переменной 
    std::cout << "Переменная num2= " << num2 << std::endl;

    int* const pnum2 = &num2; // указатель является константой 
    std::cout << "pnum2 (адрес) = " << pnum2 << ", *pnum2 (значение) = " << *pnum2<< std::endl;
    *pnum2 = 999;

    std::cout << "После изменения через pnum2:" << std::endl; 
    std::cout << "  *pnum2 = " << *pnum2 << std::endl;
    std::cout << "  num2  = " << num2 << std::endl;

    const int constCount = 7; // объявлении константы 
    const int* pToConst = &constCount;
    std::cout << "Пример указателя на константу: pToConst -> " << pToConst << ", *pToConst = " << *pToConst << std::endl;
    return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.

// lab4part2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>
using namespace std;

// Простой класс 
class Weapon {
public:
    string name;    // название
    int damage;     // урон
    double weight;  // вес

 // Конструктор с параметрами
    Weapon(const string& n, int d, double w)
        : name(n), damage(d), weight(w) {
        cout << "Создание: " << name << endl;
    }

 // Конструктор по умолчанию
    Weapon() : Weapon("Дождерез", 10, 2.5) {}

 // Деструктор  сообщает, что объект удаляется и печатает поля
    ~Weapon() {
        cout << "Удаление: " << name
            << " (урон= " << damage
            << ", Вес= " << weight << ")\n";
    }

 // Возвращает true, если предмет слишком тяжёлый 
    bool isTooHeavy(double maxweight) const {
        return maxweight < weight;
    }

 // Суммарный вес с другим оружием
    double totalWeightWith(const Weapon& other) const {
        return weight + other.weight;
    }

 // Перегрузка: суммарный вес с заданным весом
    double totalWeightWith(double otherWeight) const {
        return weight + otherWeight;
    }
};
int main() {
    setlocale(LC_ALL, "Russian");
    {
 // локальные объекты 
        Weapon w1("Катана", 50, 4.2);
        cout << "w1: " << w1.name << ", " << w1.damage << " урона, " << w1.weight << " кг\n";
        Weapon w2;
        cout << "w2: " << w2.name << ", " << w2.damage << " урона, " << w2.weight << " кг\n";
        cout << "Можно поднять 6.7 кг? " << (w1.isTooHeavy(4.0) ? "Нет" : "да") << "\n";
        cout << "Сумма w1 + w2 = " << w1.totalWeightWith(w2) << " кг\n";
    }
    // Динамический объект
    Weapon* p = new Weapon("Копьё", 55, 4.5);
    cout << "Динамический объект: " << p->name << ", вес " << p->weight << " кг\n";
    cout << "Можно поднять копьё весом 4.5 кг? " << (p->isTooHeavy(7.0) ? "Нет" : "Да") << "\n";

    delete p;
    p = nullptr;

    return 0;
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
